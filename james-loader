#!/bin/sh


PGM=`basename $0`
TMP=/tmp/$PGM.$$
SERVER=root@armstrong
SSHCMD="ssh $SERVER"
SSHCNF=$HOME/.ssh/config
METHOD=ipop3d
FONT="-font 9x15"
CHECKFORSYNC=

# xterm -geometry 80x5+510-0 -title "James-loader" -bg black -fg green -e $SSHCMD tail -f /var/spool/mail/mff /home/mff/mail/sent-mail &



printf "> "

$SSHCMD tail -f /var/log/maillog|while read m d h server proto action usertag orig origip foo
  do
  ip=`echo $origip |sed "s/[^0-9.]//g"`
  user=`echo $usertag|cut -d "=" -f 2|cut -d "," -f 1`
  tag=`echo $usertag|cut -d "=" -f 1`
  protocol=`echo $proto|cut -d "[" -f 1`
  date="$m $d $h"
#  echo $date $server $protocol $action $user
  if [ "$protocol" = "$METHOD" -a "$action" = "Login" ]
      then 
      if [ "$user" != "ovh"  -a "$CHECKFORSYNC" ]
	  then
	  if [ -f /tmp/james2.lock ]
	      then
	      echo "$date - $user login from $ip, but james2 already running"
	  else
	      echo "$date - $user login from $ip, launch james2"
	      echo cp $SSHCNF $TMP.ssh
	      cp $SSHCNF $TMP.ssh
	      printf "%s\n" "Host = $ip" "User = root" "CheckHostIP = no" > $SSHCNF
	      rsync -e ssh -W -avz \
		  "root@$ip:~mff/Desktop/Brol/" \
		  /data/.james/mff/Desktop/Brol/ \
		  >> $TMP.james-output
	      rsync -e ssh -W -avz \
		  "root@$ip:~mff/Documents/Eudora\ Folder/Mail\ Folder/" \
		  "/data/.james/mff/Documents/Eudora\ Folder/Mail\ Folder/" \
		  >> $TMP.james-output
	      rsync -e ssh -W -avz \
		  "root@$ip:~mff/Desktop/" \
		  /data/.james/mff/Desktop/ \
		  >> $TMP.james-output
	      rsync -e ssh -W -avz \
		  "root@$ip:~mff/Documents/" \
		  "/data/.james/mff/Documents/" \
		  >> $TMP.james-output
	      rsync -e ssh -W -avz \
		  "root@$ip:~mff/" \
		  "/data/.james/mff/" \
		  >> $TMP.james-output
	      echo cp $TMP.ssh $SSHCNF
	      cp $TMP.ssh $SSHCNF
#	      james2 -i -r ovh@van-helden.be &
# $ip && echo "james succeded" || echo "`date +"%b%e %H:%M:%S"` - james2 produced an error"
#| tee $TMP.james.output
	      cat $TMP.james-output | mail -s "$PGM result $date" ovh
	  fi
      else
	  echo "$date - $user logs in from $ip"
      fi
      printf "> "
  fi
  if [ "$protocol" = "imapd" -a "$action" = "Authenticated" ]
      then
      echo "$date - $user logs in from $ip"
      printf "> "
  fi
  if [ "$protocol" = "sendmail" -a "$tag" = "to" -a "$user" = "ovh" ]
      then
      echo "$date - $user received mail, fetch it"
      fetchmail
      printf "> "
      if [ $? = 0 ]
	  then
	  echo "$date - new mail fetched, launch pine"
	  /sbin/pidof pine >/dev/null || \
	      xterm -geometry 80x40+0-0 $FONT -title "Pine" -bg black -fg green -e pine -i &
	  printf "> "
      fi
  fi
done
