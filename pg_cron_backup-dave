#!/bin/sh

DUMPDIR=/Users/magic/backups
MODE=ssh
KEEP=3

export PATH=$PATH:/Library/PostgreSQL/bin

if [ "$1" ]
    then
    hosts=$@
else
    hosts=localhost
fi

PGM=`basename $0`
TMP=/tmp/$PGM.$$
SPC=`echo $PGM | sed "s/./ /g"`

cd

[ -f .profile ] && . .profile

[ ! -d "$DUMPDIR" ] && DUMPDIR=~/backups
[ ! -d "$DUMPDIR" ] && mkdir -p "$DUMPDIR"
[ ! -d "$DUMPDIR" ] && echo could not state $DUMPDIR && exit 1

cd $DUMPDIR || exit 2

for host in $hosts
	do
	if [ $host = "localhost" -o $host = "-l" ]
	then
		SSH=
		HOSTP=
		hostname=`hostname | sed "s/^www\.//" | cut -d "." -f 1|sed "s/-en$//"|sed "s/-[0-9]*$//"`
	else
		hostname=`echo $host | sed "s/^www\.//" | cut -d "." -f 1`
		if [ $MODE="ssh" ]
		then
			SSH="ssh $host"
			HOSTP=
		else
			SSH=
			HOSTP="-h $host"
		fi
	fi

		

    DATABASES=`$SSH psql -Atq $HOSTP -d template1 -l | grep -v "^template" | cut -d "|" -f 1`
	
    if [ ! -d "$DUMPDIR/$hostname" ]
	then
		mkdir -p "$DUMPDIR/$hostname"
    fi
    cd "$DUMPDIR/$hostname"

    result=$?
    if [ $result -ne 0 ]
	then
		echo
		echo "could not chdir to $DUMPDIR/$host"
		continue
    fi
	
    for database in $DATABASES
		do

		stamp=`date +"%Y%m%d-%H%M%S"`
		dumpfile="$hostname-$database-$stamp"

		printf "$PGM: `date`\n"
		printf "$SPC  processing $database: "
      
		$SSH pg_dump $HOSTP -C -s $database > $DUMPDIR/$hostname/$dumpfile-schema.$PGM 2>>$TMP.errors 
		result=$?
		if [ $result -ne 0 ] 
		then
			(
			printf "$PGM: `date`\n"
			printf "$SPC  processing $database: "
			echo "schema dump failed ($result)"
			cat $TMP.errors
			echo
			) >&2
			continue
		else
			printf "schema ok, "
		fi
      
		$SSH pg_dump $HOSTP -C $database > $DUMPDIR/$hostname/$dumpfile.$PGM 2>>$TMP.errors 
		result=$?
		if [ $result -ne 0 ] 
			then
			(
				printf "$PGM: `date`\n"
				printf "$SPC  processing $database: "
				echo "full dump failed ($result)"
				cat $TMP.errors
				echo
			) >&2
			continue
		else
			printf "full ok, " 
		fi

#		ls "$tarname*.tgz"
		
		tar cvfz $hostname-$database-$stamp-$PGM.tgz $dumpfile*.$PGM >>$TMP.errors 2>&1 
		result=$?
		if [ $result -ne 0 ] 
		then
			( 
				printf "$PGM: `date`\n"
				printf "$SPC  processing $database: "
				echo "tar failed ($result)"
				cat $TMP.errors
				echo
			) >&2
			continue
		else
			echo "tar ok"
			rm $dumpfile*.$PGM
			if [ "$KEEP" ]
			then
				count=0
				ls -t $hostname-$database-*-$PGM.tgz \
					| while read file
					do
					count=`expr $count + 1`
					if [ $count -gt $KEEP ]
						then
						rm $file
					fi
				done
			fi
		fi
	done
done
    
echo "$PGM: `date` end processing"

[ $TMP ] && rm -f $TMP.*
