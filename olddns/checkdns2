#!/bin/sh

#MASTERNS="ns1.spekuloos.be ns2.spekuloos.be"
MASTERNS="duke.van-helden.net dune.van-helden.net"

locals=`(
    (
	grep nameserver /etc/resolv.conf \
	    | egrep -v "^127.0"
	[ -f /etc/resolv.checkdns ] && cat /etc/resolv.checkdns 
    ) \
	| while read foo ns foo; do
	echo $ns
    done
    echo $LOCALNS
    )|sort -u
    `

for domain in $@
  do
#  echo $domain

##
## Query whois for authoritative NS
##
  whois=`whois+ $domain \
      | egrep -A 5 "Domain servers|NameServers:" \
      | egrep -v "Domain servers|NameServers:" \
      | cut -d "(" -f 1 \
      | sed "s/.*Name://" \
      | while read ns foo ; do
	  echo $ns|grep "[a-zA-Z0-9]*\.[a-zA-Z0-9]"
      done
      `
  auth=`for server in $whois
    do
    echo "$server"|grep -v none
    done | sort -fu
    `

##
## Query first master for "good" serial
##

#  goodserial=`  echo $MASTERNS | while read server ignore
#    do
#    host -t soa $domain $ns|grep SOA|cut -d " " -f 5
#  done`

##
## Querying masters, auth, local... and compare with goodserial
##

  for server in $MASTERNS
    do
    printf "$domain\tMaster\t$server\t"
    serial=`echo $(host -t soa $domain $server 2>/dev/null \
	| egrep -A 8 "start of authority|SOA" \
	| cut -d ";" -f 1 | sed "s/[()]//g" \
	| sed "s/.*start of authority//" | sed "s/.* SOA//") \
	| cut -d " " -f 3`
    [ "$serial" ] \
	&& printf "$serial\n" \
	|| printf "failed\n"
  done
  for server in $auth
    do
    printf "$domain\tAuth\t$server\t"
    serial=`echo $(host -t soa $domain $server 2>/dev/null \
	| egrep -A 8 "start of authority|SOA" \
	| cut -d ";" -f 1 | sed "s/[()]//g" \
	| sed "s/.*start of authority//" | sed "s/.* SOA//") \
	| cut -d " " -f 3`
    [ "$serial" ] \
	&& printf "$serial\n" \
	|| printf "failed\n"
  done
  for server in $locals
    do
    printf "$domain\tLocal\t$server\t"
    serial=`echo $(host -t soa $domain $server 2>/dev/null \
	| egrep -A 8 "start of authority|SOA" \
	| cut -d ";" -f 1 | sed "s/[()]//g" \
	| sed "s/.*start of authority//" | sed "s/.* SOA//") \
	| cut -d " " -f 3`
    [ "$serial" ] \
	&& printf "$serial\n" \
	|| printf "failed\n"
  done
done
