#!/bin/bash

PGM=`basename "$0"`
TMP=/tmp/$PGM.$$
TURBO=true
EXT=mp4
SDDIR=../mp4
HDDIR=../mp4-hd

list=$1
format=$2
[ ! $format ] && format=web

if [ ! $EXT ]
	then
	EXT=mov
fi
	
rm -f "$PGM.batch"

lastnumber=$(ls *.mov 2>/dev/null | sort -n | tail -1 | cut -d "." -f 1)
if [ $lastnumber ]
	then
	lastnumber=$(($lastnumber + 1))
else
	lastnumber=9999999
fi

(
cat $list
echo
echo $lastnumber
) | grep -v "^$" | egrep "^[0-9]"| while read index name
	do
	end=$index
	if [ $begin ]
		then
		if [ "$showname" ]
			then
			filename=$(echo "$showname" | webnormalize)
			case $format in
				"web")
				convertfolder=../mp4
				output="../web/$filename.$EXT"
				size=480x270
				bitrate=800k
				;;
				"large")
				size=640x360
				bitrate=2000k
				convertfolder=../mp4-hd
				output="../web/$filename-large.$EXT"
				;;
				"dvd")
				size=1024x576
				bitrate=3000k
				convertfolder=../dv
				output="../dv/$filename.dv"
				;;
				*)
				echo format: $format
				continue
				;;
			esac
			printf "$showname "
		fi
		export convertfolder
		export size
		export bitrate
		# export output
		
		if [ -f $output ]
			then
			echo "$output ok"
		else
			i=$begin
			if [ ! $end ]
				then
				end=999999
			fi
			sources=""
			mergesources=""
			while [ $i -lt $end ]
			do
				printf " $i"
				input=$(ls -t $i.mov $i.MP4 $i.MTS 2>/dev/null | head -1)
				sources="$sources $convertfolder/$i.mp4"
				mergesources="$mergesources -cat $convertfolder/$i.mp4"
				if [ ! -f "$convertfolder/$i.mp4" ]
					then
					printf "(c)"
					makemp4 $input 2>/dev/null
					printf "\b\b\b"
					# name=$(basename "$input" | sed "s/\.[a-zA-Z0-9]*$//")
					# echo $name
					# echo "printf \"converting $input:\"" >> $TMP.makemp4
					# echo "ffmpeg -i $input -acodec libfaac -ab 160000 -s $size -vcodec libx264 -coder 1 -flags +loop -cmp +chroma -partitions +parti8x8+parti4x4+partp8x8+partb8x8 -me_method umh -subq 8 -me_range 16 -g 250 -keyint_min 25 -sc_threshold 40 -i_qfactor 0.71 -b_strategy 2 -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -bf 3 -refs 5 -directpred 3 -trellis 1 -flags2 +bpyramid+mixed_refs+wpred+dct8x8+fastpskip -wpredp 2 -coder 0 -bf 0 -refs 1 -flags2 -wpred-dct8x8 -level 30 -maxrate 10000000 -bufsize 10000000 -wpredp 0 -b $bitrate -threads 0 -f mp4 $convertfolder/$name.mp4 2>/dev/null && echo ok" >> $TMP.makemp4
					# echo "makemp4 $input 2>/dev/null && echo ok"  >> $TMP.makemp4
				fi
				i=`expr $i + 1`
				[ $i -gt $(($lastfound + 100)) ] && echo "end break" &&  break
			done
			# echo
			printf "\n"
			
			# echo "ls -1 $sources >/dev/null 2>/dev/null && echo \"merging $sources\" && MP4Box $mergesources -new $output" >> $TMP.makemp4
			ls -1 $sources >/dev/null 2>/dev/null
			if [ $? -eq 0 ]
			then
				printf "mergin $sources:"
				MP4Box $mergesources -new $output
			fi
		fi
	fi
	begin=$index
	showname=$name
done

if [ -f $TMP.makemp4 ]
	then
	printf "files to convert: "
	grep -c "makemp4" $TMP.makemp4 2>/dev/null

	. $TMP.makemp4
	rm $TMP.makemp4
fi

count=$(cat "$PGM.batch" 2>/dev/null | wc -l)

#cat $PGM.batch
exit

(
	[ -f "$PGM.batch" ] \
		&& echo && echo "Now processing... ($count files)" \
		&& . "$PGM.batch" 2>&1 && rm "$PGM.batch"
) | egrep -v "Warning:|^iTunes|atom rldh length|TextMediaAddTextSample|Yes, we know this|figure out what it means"

# [ -f "$PGM.batch" ] && cat "$PGM.batch" && rm "$PGM.batch"

# list=$(cat $TMP.list)
# echo "batchprocess $list" > "$PGM.process"

rm -f $TMP.*

exit


echo "#$PGM: make files"
. "$PGM.batch" || exit 1

echo "#$PGM: make playlist"
makeplaylist $PGM.batch >> ../web/playlist.php || exit 2

cd ../dv	 || exit 3
echo "#$PGM: convert to web"
. "$OLDPWD/$PGM.process"  || exit 4

# exit

# (
# 	echo "("
# 	cat $TMP.batch
# 	echo ") > $PGM.process"
# ) > $PGM.batch
# 
# echo "batchprocess $PGM.process" >> $PGM.batch
